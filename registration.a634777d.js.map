{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAQO,SAASC,EAAUC,GACxBC,EAAAJ,GAASK,OAAOC,QAAQH,EAC1B,CARAC,EAAAJ,GAASK,OAAOE,KAAK,CACnBC,SAAU,gBACVC,SAAU,QACVC,QAAS,K,WCLX,IAAAC,EAAAV,EAAA,S,aAGA,MAAMW,EAAa,kBAEZ,MAAMC,EACXC,kBAAkBC,GAChBA,EAAKC,SAAWH,GAAKI,EAASF,EAAKC,UAE/BD,EAAKG,OAASH,EAAKI,OAASJ,EAAKC,UACnCI,QAAQC,IAAI,WACZC,EAAAC,UAAUC,WAAWZ,EAAYG,IAEjCK,QAAQC,IAAI,aAAcN,EAE9B,CAEAD,qBAAqBI,GACnB,MACMH,SADcF,EAAKY,YACNC,MAAKC,GAAMA,EAAGT,QAAUA,IAE3C,OADA,EAAAP,EAAAiB,UAAS,OAAQb,GACVA,CACT,CAEAD,wBACE,IACE,MAAMe,QAAcP,EAAAC,UAAUO,YAAYlB,GAE1C,OADA,EAAAD,EAAAiB,UAAS,QAASC,GACXA,CAIT,CAHE,MAAOE,GAEP,OADAX,QAAQC,IAAIU,GACL,EACT,CACF,CAEAjB,wBAAwBI,EAAOF,GAC7B,QAAIH,EAAKmB,kBAAkBd,EAAOF,MAChC,EAAAL,EAAAiB,UAAS,gBAAgB,IAClB,EAIX,CAEAd,yBAAyBI,GAGvB,cAFoBL,EAAKY,YACJQ,MAAKN,GAAMA,EAAGT,QAAUA,GAE/C,CAEAJ,+BAA+BI,EAAOF,GACpC,IACE,MAAMD,QAAaF,EAAKqB,QAAQhB,GAChC,IAAKH,EAAM,MAAM,IAAIoB,MAAM,YAM3B,OAJItB,GAAKI,EAASD,KAAcD,EAAKC,WACnC,EAAAL,EAAAiB,UAAS,OAAQb,GAGZF,GAAKI,EAASD,KAAcD,EAAKC,QAI1C,CAHE,MAAOe,GAEP,OADAX,QAAQC,IAAIU,EAAI5B,UACT,CACT,CACF,CAEAW,SAAgBsB,GACd,OAAO,EAAAzB,EAAA0B,QAAOD,EAChB,E,aC/DmBE,SAASC,cAAc,iBAE/BC,iBAAiB,UAAUC,MAAMC,IAC5CA,EAAEC,iBACF,MAAMxB,EAAQuB,EAAEE,cAAcC,SAAS1B,MAAM2B,MACvC5B,EAAQwB,EAAEE,cAAcC,SAAS3B,MAAM4B,MACvC9B,EAAW0B,EAAEE,cAAcC,SAAS7B,SAAS8B,MAC7CC,EAAYL,EAAEE,cAAcC,SAAS,kBAAkBC,MAE7D,GAAI5B,EAAM8B,OAAS,EAGjB,OAFA5B,QAAQC,IAAI,6CACZnB,EAAU,wCAIZ,UAD0BW,EAAKoC,YAAY/B,GAIzC,OAFAE,QAAQC,IAAI,8BACZnB,EAAU,yBAGZ,GAAIc,EAASgC,OAAS,EAGpB,OAFA5B,QAAQC,IAAI,gDACZnB,EAAU,2CAGZ,GAAIc,IAAa+B,EAGf,OAFA3B,QAAQC,IAAI,gCACZnB,EAAU,2BAIZ,MAAMa,EAAO,C,MACXG,E,MACAC,E,SACAH,EACAkC,MAAM,UAGFrC,EAAKsC,WAAWpC,GACtBqC,YAAW,MACT,EAAAzC,EAAA0C,UAAS,eACR","sources":["src/modules/notiflix.js","src/modules/auth/index.js","src/scripts/pages-scripts/registration.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  position: 'center-bottom',\n  distance: '130px',\n  opacity: 0.8,\n});\n\nexport function showError(message) {\n  Notiflix.Notify.failure(message);\n}\n","import { loadFromLS, saveToLS, sha256 } from '../../scripts/helpers';\nimport { DynamoAPI } from '../database/dynamodb';\n\nconst TABLE_NAME = 'GameStore-users';\n\nexport class Auth {\n  static createUser(user) {\n    user.password = Auth.#convert(user.password);\n\n    if (user.login && user.email && user.password) {\n      console.log('created');\n      DynamoAPI.createItem(TABLE_NAME, user);\n    } else {\n      console.log('Error user', user);\n    }\n  }\n\n  static async getUser(login) {\n    const users = await Auth.getUsers();\n    const user = users.find(el => el.login === login);\n    saveToLS('user', user);\n    return user;\n  }\n\n  static async getUsers() {\n    try {\n      const users = await DynamoAPI.getAllItems(TABLE_NAME);\n      saveToLS('users', users);\n      return users;\n    } catch (err) {\n      console.log(err);\n      return [];\n    }\n  }\n\n  static async authorized(login, password) {\n    if (Auth.isCorrectPassword(login, password)) {\n      saveToLS('isAuthorized', true);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static async isFreeLogin(login) {\n    const users = await Auth.getUsers();\n    const isFree = users.some(el => el.login === login);\n    return !isFree;\n  }\n\n  static async isCorrectPassword(login, password) {\n    try {\n      const user = await Auth.getUser(login);\n      if (!user) throw new Error('Not User');\n\n      if (Auth.#convert(password) === user.password) {\n        saveToLS('user', user);\n      }\n\n      return Auth.#convert(password) === user.password;\n    } catch (err) {\n      console.log(err.message);\n      return false;\n    }\n  }\n\n  static #convert(text) {\n    return sha256(text);\n  }\n}\n","import { showError } from '../../modules/notiflix';\nimport { HOST } from '../constants';\nimport { Auth } from '../../modules/auth';\nimport { redirect } from '../helpers';\n\nconst authFormElem = document.querySelector('.js-auth-form');\n\nauthFormElem.addEventListener('submit', async e => {\n  e.preventDefault();\n  const email = e.currentTarget.elements.email.value;\n  const login = e.currentTarget.elements.login.value;\n  const password = e.currentTarget.elements.password.value;\n  const password2 = e.currentTarget.elements['check-password'].value;\n\n  if (login.length < 4) {\n    console.log('Login length must be greater than 3!');\n    showError('Login length must be greater than 3!');\n    return;\n  }\n  const isFreeLogin = await Auth.isFreeLogin(login);\n  if (!isFreeLogin) {\n    console.log('Login already in use!');\n    showError('Login already in use!');\n    return;\n  }\n  if (password.length < 6) {\n    console.log('Password length must be greater than 3!');\n    showError('Password length must be greater than 3!');\n    return;\n  }\n  if (password !== password2) {\n    console.log('Passwords do not match!');\n    showError('Passwords do not match!');\n    return;\n  }\n\n  const user = {\n    login,\n    email,\n    password,\n    games:[]\n  };\n\n  await Auth.createUser(user);\n  setTimeout(() => {\n    redirect('auth.html');\n  }, 100);\n});\n"],"names":["$19McP","parcelRequire","$06ca3009fd532d04$export$3879b24e8245693d","message","$parcel$interopDefault","Notify","failure","init","position","distance","opacity","$fDHq9","$1a94b3211beae20f$var$TABLE_NAME","$1a94b3211beae20f$export$334c29725a78c21d","static","user","password","convert","login","email","console","log","$3JKSU","DynamoAPI","createItem","getUsers","find","el","saveToLS","users","getAllItems","err","isCorrectPassword","some","getUser","Error","text","sha256","document","querySelector","addEventListener","async","e","preventDefault","currentTarget","elements","value","password2","length","isFreeLogin","games","createUser","setTimeout","redirect"],"version":3,"file":"registration.a634777d.js.map"}